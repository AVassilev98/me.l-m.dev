---
import Layout from '../layouts/Layout.astro';
// import Card from '../layouts/Card.astro';
import Post from '../layouts/Post.astro';
import { DB, DB_CLOSE } from '../lib/db';
import type { PostEntry } from '../lib/db';
import { markedHighlight } from "marked-highlight";
import { marked } from 'marked';
import hljs from 'highlight.js';
import 'highlight.js/styles/arta.css';

marked.use(markedHighlight({
	langPrefix: 'hljs language-',
	highlight(code, lang) {
		const language = hljs.getLanguage(lang) ? lang : 'plaintext';
		return hljs.highlight(code, { language }).value;
	}
}), {
	mangle: false,
	headerIds: false,
	breaks: true,
});

function replaceMediaWithURLs(text: string) {
  const mediaRegex = /(https?:\/\/[^\s]+?\.(?:png|jpe?g|gif|svg|mp4|webm))/gi;

  return text.replace(mediaRegex, (match) => {
    if (/\.(?:png|jpe?g|gif|svg)$/i.test(match)) {
      return `\n<img loading="lazy" src="${match}">\n`;
    } else if (/\.(?:mp4|webm)$/i.test(match)) {
      return `\n<video preload="none" src="${match}" controls></video>\n`;
    }

    return match;
  });
}

console.log('getdb')
const db = await DB();

const p_search = Astro.url.searchParams.get('search');
const p_type = Astro.url.searchParams.get('type');

let query = `SELECT * FROM posts`;

if (p_search || p_type) {
  query += ` WHERE`;

  if (p_search) {
    query += ` content LIKE '%${p_search}%'`;
  }

  if (p_search && p_type) {
    query += ` AND`;
  }

  if (p_type) {
    query += ` post_type = '${p_type}'`;
  }
}

const _t = performance.now()

console.log('start')
const posts = db.prepare(query).all() as PostEntry[];

console.log((performance.now() - _t), "millis")

// TODO: store rendered HTML?
---

<Layout title="Welcome to Astro.">

{posts.map(post => {
	const inner_content = replaceMediaWithURLs(post.content);
	
	return <Post
		content={marked(inner_content)}
		time={new Date(post.created_at * 1000)}
	/>
})}

</Layout>

<style>
	html {
        background-color: #000;
	}
</style>